AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create EC2 instances running a Python script with configurable instance count and auto-generated KeyPair.

Parameters:
  InstanceCount:
    Type: Number
    Default: 1
    Description: Number of EC2 instances to create

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties: 
      CidrBlock: '10.0.0.0/16'
      Tags: 
        - Key: Name
          Value: MyVPC
  
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.1.0/24'
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: PublicSubnet

  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable

  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Enable SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: '0.0.0.0/0'  # Allow SSH from anywhere (not recommended for production)

  KeyPair:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName: AutoGeneratedKeyPair
      KeyType: rsa
      PublicKeyMaterial: |-
        ssh-rsa AAAAB3Nza...  # Replace with an existing public key material if desired, or generate dynamically.

  LaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateData:
        InstanceType: t2.micro
        KeyName: !Ref KeyPair
        SecurityGroupIds:
          - !Ref SecurityGroup
        UserData: 
          Fn::Base64: !Sub |
            #!/bin/bash
            exec > /var/log/user-data.log 2>&1
            set -x
            export DEBIAN_FRONTEND=noninteractive
            sudo apt update -y
            sudo apt install -y python3 python3-pip git
            cd /opt
            sudo git clone LINK TO GIT REPO
            cd python-app
            sudo pip3 install -r requirements.txt
            nohup python3 main.py > /var/log/main.log 2>&1 &
      ImageId: ami-0a0e5d9c7acc336f1  # Replace with an appropriate Linux AMI for your region

  EC2Instances:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      MinSize: !Ref InstanceCount
      MaxSize: !Ref InstanceCount
      DesiredCapacity: !Ref InstanceCount
      VPCZoneIdentifier:
        - !Ref PublicSubnet
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber

Outputs:
  InstanceCount:
    Description: Number of instances created
    Value: !Ref InstanceCount

  PublicIP:
    Description: Public IP addresses of all instances
    Value: !Join [ ", ", [ !GetAtt EC2Instances.Instances[0].PublicIp ] ]

  PrivateKey:
    Description: The private key of the generated KeyPair
    Value: !GetAtt KeyPair.KeyMaterial
